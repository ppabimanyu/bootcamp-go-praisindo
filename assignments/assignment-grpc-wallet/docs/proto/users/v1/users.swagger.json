{
  "swagger": "2.0",
  "info": {
    "title": "User Service",
    "description": "User service handle API for CRUD users",
    "version": "v1"
  },
  "tags": [
    {
      "name": "proto.users.v1.Service"
    }
  ],
  "host": "localhost:8080",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v2/users": {
      "get": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.GetUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "proto.users.v1.Service"
        ]
      },
      "delete": {
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.DeleteUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Request id detailuser",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "proto.users.v1.Service"
        ]
      },
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.CreateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/proto.users.v1.CreateUserRequest"
            }
          }
        ],
        "tags": [
          "proto.users.v1.Service"
        ]
      },
      "put": {
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.UpdateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/proto.users.v1.UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "proto.users.v1.Service"
        ]
      }
    },
    "/api/v2/users/{id}": {
      "get": {
        "operationId": "DetailUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/proto.users.v1.DetailUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Request id detailuser",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "proto.users.v1.Service"
        ]
      }
    }
  },
  "definitions": {
    "proto.users.v1.CreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        },
        "password": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        }
      }
    },
    "proto.users.v1.CreateUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/proto.users.v1.Users"
        },
        "response": {
          "$ref": "#/definitions/proto.users.v1.MutationResponse"
        }
      }
    },
    "proto.users.v1.DeleteUserResponse": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#/definitions/proto.users.v1.MutationResponse"
        }
      }
    },
    "proto.users.v1.DetailUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "title": "Response detailuser",
          "allOf": [
            {
              "$ref": "#/definitions/proto.users.v1.Users"
            }
          ]
        }
      }
    },
    "proto.users.v1.GetUserResponse": {
      "type": "object",
      "properties": {
        "Pagination": {
          "$ref": "#/definitions/proto.users.v1.PaginationResponse"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/proto.users.v1.Users"
          },
          "title": "Response users"
        },
        "response": {
          "$ref": "#/definitions/proto.users.v1.MutationResponse"
        }
      }
    },
    "proto.users.v1.MutationResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "proto.users.v1.PaginationResponse": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalRows": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "proto.users.v1.UpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        },
        "password": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        }
      }
    },
    "proto.users.v1.UpdateUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/proto.users.v1.Users"
        },
        "response": {
          "$ref": "#/definitions/proto.users.v1.MutationResponse"
        }
      }
    },
    "proto.users.v1.Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Go int to ProtoBuf int32"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        },
        "password": {
          "type": "string",
          "title": "Go string to ProtoBuf string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Go *time.Time to ProtoBuf Timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "Go *time.Time to ProtoBuf Timestamp"
        },
        "walletId": {
          "type": "integer",
          "format": "int32"
        },
        "wallet": {
          "$ref": "#/definitions/proto.users.v1.Wallet"
        }
      }
    },
    "proto.users.v1.Wallet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Go int to ProtoBuf int32"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "lastTransaction": {
          "type": "string",
          "format": "date-time",
          "title": "Go *time.Time to ProtoBuf Timestamp"
        }
      }
    }
  }
}
